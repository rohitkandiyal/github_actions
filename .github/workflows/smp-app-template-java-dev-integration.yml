name: SMP-Apps-Java-CI

on:
  workflow_dispatch:
    inputs:
      Branch:
        description: 'Branch to Build'
        required: true
        default: 'master'

env:
  AWS_REGION: eu-central-1

jobs:
  build-test-scan:
    runs-on: ubuntu-20.04
    # outputs:
    #   VERSION_NUM: ${{ steps.set-version.outputs.VERSION_NUM }}
    #   CHANNEL_NAME: ${{ steps.set-version.outputs.CHANNEL_NAME }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: '${{ github.event.inputs.Branch }}'
          fetch-depth: 0

      - name: Listing Checkout
        run: git tag -l
        shell: bash

      - name: Set Version
        id: set-semantic-version
        uses: paulhatch/semantic-version@v4.0.3
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-prerelease${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          # change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          # namespace: my-service
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          # short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          # bump_each_commit: false
      
      - name: Show version
        run: |
          echo ${{ steps.set-semantic-version.outputs.version }}
          echo ${{ steps.set-semantic-version.outputs.version_tag }}
          echo ${{ steps.set-semantic-version.outputs.increment }}
        shell: bash
         
          
          

      